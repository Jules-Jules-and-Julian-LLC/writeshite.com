buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:latest.release"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:latest.release"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version 'latest.release'
    id 'eclipse'
    id "org.springframework.boot" version 'latest.release'
    id "io.spring.dependency-management" version 'latest.release'
    id "org.jetbrains.kotlin.plugin.spring" version 'latest.release'
    id "com.moowork.node" version 'latest.release'
    id "com.google.cloud.tools.jib" version 'latest.release'
}

jib {
    extraDirectories {
        paths {
            path {
                from = file('secrets')
                into = '/secrets'
            }
        }
    }
    to {
        image = 'writeshite:' + getProperty('appVersion')
    }
}

bootJar {
    archiveBaseName = 'gs-messaging-stomp-websocket'
    archiveVersion = '0.1.0'
}

bootRun {
    sourceResources sourceSets.main
    systemProperties System.properties
}

//tasks.register('appNpmInstall', NpmTask) {
//    description = "Installs all dependencies from package.json"
//    workingDir = file("${project.projectDir}/src/frontend")
//    args = ["install"]
//}
//
//tasks.register('appNpmBuild', NpmTask) {
//    dependsOn appNpmInstall
//    description = "Builds production version of the webapp"
//    workingDir = file("${project.projectDir}/src/frontend")
//    args = ["run", "build"]
//}
//
//tasks.register('buildFrontendForProduction', Copy) {
//    dependsOn appNpmBuild
//    from 'src/frontend/build'
//    into 'src/main/resources/static/'
//}
//
//tasks.register('appNpmAuditFix', NpmTask) {
//    description = "Fixes security vulnerabilities in project"
//    workingDir = file("${project.projectDir}/src/frontend")
//    args = ["audit", "fix"]
//}

repositories {
    mavenCentral()
}

dependencies {
    implementation  "org.springframework.boot:spring-boot-starter-websocket"
    implementation  "org.jetbrains.kotlin:kotlin-reflect:latest.release"
    implementation  "com.fasterxml.jackson.module:jackson-module-kotlin:latest.release"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:latest.release"

    implementation  "com.amazonaws:aws-java-sdk-s3:latest.release"
    implementation  "javax.xml.bind:jaxb-api:latest.release"

    implementation "org.jetbrains.kotlin:kotlin-stdlib"
}

configurations {
    all*.exclude group: "commons-logging", module: "commons-logging"
}

version '1.0-SNAPSHOT'
